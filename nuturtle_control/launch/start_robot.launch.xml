<launch>
  <arg name="body_id" default="blue/base_footprint"/>
  <arg name="odom_id" default="odom"/>
  <arg name="wheel_left" default="wheel_left_joint"/>
  <arg name="wheel_right" default="wheel_right_joint"/>
  <arg name="control_rviz_cfg" default="$(find-pkg-share nuturtle_control)/config/control.rviz"/>
  
  <!-- source for robot commands-->
  <arg name="cmd_src" default="circle" description="cmd_vel publisher: circle, teleop, or none" />

  <!-- real robot or simulation -->
  <arg name="robot" default="nusim" description="interface: nusim (for simulation) or localhost (for turtlebot) or none" />
  
  <!-- (must be false when localhost is on) -->
  <arg name="use_rviz" default="true" description="use rviz: true or false"/> 
  
  <arg name="diff_params" default="$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>

  <!-- circle command node-->
  <group if="$(eval '\'$(var cmd_src)\' == \'circle\'')">
      <node pkg="nuturtle_control" exec="circle" name="circle">
          <param from= "$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
          <param name="body_id" value= '$(var body_id)'/>
          <param name="odom_id" value= '$(var odom_id)'/>
          <param name="wheel_left" value= '$(var wheel_left)'/>
          <param name="wheel_right" value= '$(var wheel_right)'/>
      </node>
  </group>

  <!-- teleop command node-->
  <!-- TODO: CITE https://Ftics.stackexchange.com/questions/93858/is-teleop-twist-keyboard-launchable-in-ros2 -->
  <group if="$(eval '\'$(var cmd_src)\' == \'teleop\'')">
        <node pkg="teleop_twist_keyboard" exec="teleop_twist_keyboard" name="teleop" output="screen" launch-prefix="xterm -e" />
  </group>

  <group if="$(eval '\'$(var robot)\' == \'localhost\'')">
        <node pkg="numsr_turtlebot" exec="numsr_turtlebot" /> 
        
        <node pkg="nuturtle_control" exec="odometry" name="odometry">
            <param from= "$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
            <param name="body_id" value= 'blue/base_footprint'/>
            <param name="odom_id" value= 'odom'/>
            <remap from="joint_states" to="blue/joint_states"/>
            <param name="wheel_left" value= '$(var wheel_left)'/>
            <param name="wheel_right" value= '$(var wheel_right)'/>
        </node>

        <node pkg="nuturtle_control" exec="turtle_control" name="turtle_control">
            <param from= "$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
             <remap from="joint_states" to="blue/joint_states"/>

        </node>
    </group>


    <group if="$(eval '\'$(var robot)\' == \'nusim\'')">
        <!-- start simulator -->
        <node pkg="nusim" exec="nusim">
            <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
            <param from="$(find-pkg-share nusim)/config/basic_world.yaml"/>
        </node>

        <group if="$(eval '\'$(var use_rviz)\' == \'true\'')">
            <node pkg="rviz2" exec="rviz2" name="rviz2" args="-d $(var control_rviz_cfg)">
            </node>
        </group>

        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
            <arg name="use_rviz" value="false"/>
            <arg name="use_jsp" value="false"/>
            <arg name="color" value="blue"/>
        </include>
        <!-- load robot model -->
        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py" >
            <arg name="color" value="red"/>
            <arg name="use_rviz" value="false"/>
            <arg name="use_jsp" value="true"/>
        </include>

        <!-- run odometry node -->
        <node pkg="nuturtle_control" exec="odometry" name="odometry">
            <param from= "$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
            <!-- odometry publishes xform between body id and odom id (blue/base_footprint and odom by default) -->
            <param name="body_id" value= '$(var body_id)'/>
            <param name="odom_id" value= '$(var odom_id)'/>
            <remap from="/joint_states" to="blue/joint_states"/>
            <!-- <remap from="/odom" to="blue/odom"/> -->
            <param name="wheel_left" value= '$(var wheel_left)'/>
            <param name="wheel_right" value= '$(var wheel_right)'/>
        </node>

        <!-- run turtle_control node -->
        <node pkg="nuturtle_control" exec="turtle_control" name="turtle_control">
            <param from= "$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>

            <remap from="/wheel_cmd" to="red/wheel_cmd"/>
            <remap from="/sensor_data" to="red/sensor_data"/>
            <remap from="/joint_states" to="blue/joint_states"/>
        </node>

        <!-- Identity transform between nusim/world and odom -->
        <node pkg="tf2_ros"
            exec="static_transform_publisher"
            name="nusim_world_to_odom"
            args="--x 0
                --y 0
                --z 0
                --qx 0
                --qy 0
                --qz 0
                --qw 1
                --frame-id nusim/world
                --child-frame-id odom"
        />

    </group>

    <group if="$(eval '\'$(var robot)\' == \'none\'')">
  <!-- rviz -->
        <group if="$(eval '\'$(var use_rviz)\' == \'true\'')">
            <node pkg="rviz2" exec="rviz2" name="rviz2" args="-d $(var control_rviz_cfg)">
            </node>
        </group>

        <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py">
            <arg name="use_rviz" value="false"/>
            <arg name="use_jsp" value="false"/>
            <arg name="color" value="blue"/>
        </include>

        <!-- Identity transform between nusim/world and odom -->
        <node pkg="tf2_ros"
            exec="static_transform_publisher"
            name="nusim_world_to_odom"
            args="--x 0
                --y 0
                --z 0
                --qx 0
                --qy 0
                --qz 0
                --qw 1
                --frame-id nusim/world
                --child-frame-id odom"
        />

    </group>



</launch>

